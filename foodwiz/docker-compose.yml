version: "3"

services:
  db:
    container_name: db
    image: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data

  automation:
    container_name: automation
    image: food-wiz-automation
    build:
      context: ./food-wiz-automation
      dockerfile: Dockerfile
    ports:
      - 5000:5000
    command: ["flask", "run", "--host=0.0.0.0"]

  backend:
    container_name: backend
    image: food-wiz-backend
    depends_on:
      - db
      - automation
    build:
      context: ./food-wiz-backend
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    environment:
      - spring_jpa_properties_hibernate_temp_user_jdbc_metadata_defaults=false
      - spring_datasource_url=jdbc:postgresql://db:5432/postgres
      - spring_datasource_username=postgres
      - spring_datasource_password=postgres
      - spring_jpa_properties_hibernate_dialect=org.hibernate.dialect.PostgreSQL95Dialect
      - spring_jpa_hibernate_ddl-auto=update
      - flask_url=http://automation:5000/api
      # - flask_url=http://fvz.env4health.finki.ukim.mk/api
      - server_servlet_contextPath=/api
      - spring_servlet_multipart_max-file-size=-1
      - spring_servlet_multipart_max-request-size=-1
    command: [
        "java",
        "-jar",
        "FoodWizBackend.jar",
      ]

  client:
    container_name: client
    image: food-wiz-client
    build:
      context: ./food-wiz-client
      dockerfile: Dockerfile
    command: ["npm", "start"]
    ports:
      - 3000:3000
    environment:
      - CHOKIDAR_USEPOLLING=true
      # - REACT_APP_BACKEND_URL=http://fvz.env4health.finki.ukim.mk/api
      - REACT_APP_BACKEND_URL=http://localhost:8080/api
    depends_on:
      - backend
    stdin_open: true
    tty: true

volumes:
  postgres-data:
